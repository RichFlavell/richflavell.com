{"version":3,"sources":["webpack:///./src/views/Posts/style.ts","webpack:///./src/views/Posts/index.tsx"],"names":["Wrapper","styled","Content","props","theme","spacing","md","Actions","div","media","lessThan","PageHeading","Heading","PageTitle","Title","palette","text","primary","PageCount","sm","PostsGridList","GridList","pageQuery","Posts","data","pageContext","t","useTranslation","posts","safe","allMdx","edges","SEO","title","pathname","Header","currentPage","numPages","map","post","Card","cascade","key","node","id","to"],"mappings":"0kBAKO,IAAMA,EAAUC,YAAOC,KAAV,iEAAGD,CAAH,oBACL,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,MAG/BC,EAAUN,IAAOO,IAAV,iEAAGP,CAAH,0DAMhBQ,IAAMC,SAAS,SAAfD,CANgB,KAOD,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,OAInCK,EAAcV,YAAOW,KAAV,qEAAGX,CAAH,oHAIJ,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,KAK7CG,IAAMC,SAAS,SAAfD,CAToB,KAUN,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,OAKlCO,EAAYZ,YAAOa,KAAV,mEAAGb,CAAH,2BACX,SAAAE,GAAK,OAAIA,EAAMC,MAAMW,QAAQC,KAAKC,WAIhCC,EAAYjB,IAAOO,IAAV,mEAAGP,CAAH,uFAGH,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,QAAQc,MAErC,SAAAhB,GAAK,OAAIA,EAAMC,MAAMW,QAAQC,KAAKC,WAGhCG,EAAgBnB,YAAOoB,KAAV,uEAAGpB,CAAH,uBAGtBQ,IAAMC,SAAS,SAAfD,CAHsB,KAIP,SAAAN,GAAK,OAAIA,EAAMC,MAAMC,QAAQC,O,wBCoBnCgB,EAAY,aAyCVC,UAvFsB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACpCC,EAAMC,YAAe,SAArBD,EACFE,EAAQC,YAAKL,EAAKM,OAAOC,OAC/B,OACE,oCACE,kBAACC,EAAA,EAAD,CAAKC,MAAO,QAASC,SAAU,WAC/B,kBAAClC,EAAD,KACE,kBAACmC,EAAA,EAAD,MACA,kBAACxB,EAAD,KACE,kBAACE,EAAD,KAAYa,EAAE,UACd,kBAACR,EAAD,KACGQ,EAAE,QADL,IACeD,EAAYW,YAD3B,MAC2CX,EAAYY,WAGzD,kBAACjB,EAAD,KACGQ,EAAMU,KAAI,SAAAC,GAAI,OACb,kBAACC,EAAA,EAAD,CAAMC,SAAS,EAAOC,IAAKH,EAAKI,KAAKC,GAAIpB,KAAMe,QAGnD,kBAAChC,EAAD,KACGkB,EAAYW,YAAc,GACzB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACES,GACEpB,EAAYW,YAAc,GAAM,EAAhC,qBAEcX,EAAYW,YAAc,GAFxC,KAFJ,KAOWV,EAAE,cAIhBD,EAAYW,YAAcX,EAAYY,UACrC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaQ,GAAE,WAAYpB,EAAYW,YAAc,GAAtC,KACZV,EAAE,QADL","file":"component---src-views-posts-index-tsx-6ff4e62c8a4cde9d59cc.js","sourcesContent":["import styled from \"styled-components\"\nimport { Heading, Title, Content } from \"../../config/style/mdx\"\nimport GridList from \"../../components/GridList\"\nimport { media } from \"../../config/style/global\"\n\nexport const Wrapper = styled(Content)`\n  padding: 0 ${props => props.theme.spacing.md};\n`\n\nexport const Actions = styled.div`\n  margin: auto;\n  display: flex;\n  width: 95%;\n  max-width: 90em;\n\n  ${media.lessThan(\"tablet\")`\n    padding: 0px ${props => props.theme.spacing.md};\n  `}\n`\n\nexport const PageHeading = styled(Heading)`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  padding-bottom: ${props => props.theme.spacing.md};\n  max-width: 90em;\n  width: 95%;\n  margin: auto;\n\n  ${media.lessThan(\"tablet\")`\n    margin: 0px ${props => props.theme.spacing.md};\n    width: auto;\n  `}\n`\n\nexport const PageTitle = styled(Title)`\n  color: ${props => props.theme.palette.text.primary};\n  margin: 0px;\n`\n\nexport const PageCount = styled.div`\n  margin-left: auto;\n  margin-top: auto;\n  margin-bottom: ${props => props.theme.spacing.sm};\n  font-weight: lighter;\n  color: ${props => props.theme.palette.text.primary};\n`\n\nexport const PostsGridList = styled(GridList)`\n  max-width: 90em;\n\n  ${media.lessThan(\"tablet\")`\n    padding: 0px ${props => props.theme.spacing.md}\n  `}\n`\n","import { graphql } from \"gatsby\"\nimport React from \"react\"\nimport Card from \"../../components/Card\"\nimport { Left, Right } from \"../../config/style/mdx\"\nimport { PostsQuery } from \"../../types/graphql\"\nimport safe from \"../../utils/safe\"\nimport SEO from \"../../utils/SEO\"\nimport { SeeMoreLink } from \"../Home/style\"\nimport {\n  Actions,\n  PageCount,\n  PageHeading,\n  PageTitle,\n  PostsGridList,\n  Wrapper,\n} from \"./style\"\nimport { useTranslation } from \"react-i18next\"\nimport Header from \"../../components/Header\"\n\ninterface IPostsProps {\n  data: PostsQuery\n  pageContext: {\n    currentPage: number\n    numPages: number\n  }\n}\nconst Posts: React.FC<IPostsProps> = ({ data, pageContext }) => {\n  const { t } = useTranslation(\"Posts\")\n  const posts = safe(data.allMdx.edges)\n  return (\n    <>\n      <SEO title={\"Posts\"} pathname={\"/posts\"} />\n      <Wrapper>\n        <Header />\n        <PageHeading>\n          <PageTitle>{t(\"posts\")}</PageTitle>\n          <PageCount>\n            {t(\"page\")} {pageContext.currentPage} / {pageContext.numPages}\n          </PageCount>\n        </PageHeading>\n        <PostsGridList>\n          {posts.map(post => (\n            <Card cascade={false} key={post.node.id} data={post} />\n          ))}\n        </PostsGridList>\n        <Actions>\n          {pageContext.currentPage > 1 && (\n            <Left>\n              <SeeMoreLink\n                to={\n                  pageContext.currentPage - 1 === 1\n                    ? `/posts/`\n                    : `/posts/${pageContext.currentPage - 1}/`\n                }\n              >\n                &laquo; {t(\"previous\")}\n              </SeeMoreLink>\n            </Left>\n          )}\n          {pageContext.currentPage < pageContext.numPages && (\n            <Right>\n              <SeeMoreLink to={`/posts/${pageContext.currentPage + 1}/`}>\n                {t(\"next\")} &raquo;\n              </SeeMoreLink>\n            </Right>\n          )}\n        </Actions>\n      </Wrapper>\n    </>\n  )\n}\n\nexport const pageQuery = graphql`\n  query Posts($skip: Int!, $limit: Int!) {\n    allMdx(\n      sort: { fields: [frontmatter___date], order: ASC }\n      limit: $limit\n      skip: $skip\n      filter: { frontmatter: { path: { eq: null } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt\n          timeToRead\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            path\n            thumbnail: featuredImage {\n              publicURL\n              childImageSharp {\n                fluid(\n                  maxWidth: 653\n                  maxHeight: 280\n                  cropFocus: CENTER\n                  quality: 90\n                ) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            date\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Posts\n"],"sourceRoot":""}